./: lib{glbinding-aux}

# Sources
lib{glbinding-aux}: \
  hxx{glbinding-aux_export glbinding-aux_features glbinding-aux_api} \
  include/glbinding-aux/{hxx ixx}{**} source/{hxx ixx cxx}{**}

switch ($cxx.target.class)
{
  case 'linux'
  {
    glbinding_aux.macro.import = '__attribute__((visibility("default")))'
    glbinding_aux.macro.export = '__attribute__((visibility("default")))'
    glbinding_aux.macro.hidden = '__attribute__((visibility("hidden")))'
    glbinding_aux.macro.deprecated = '__attribute__((__deprecated__))'
  }

  case 'macos'
  {
    glbinding_aux.macro.import = '__attribute__((visibility("default")))'
    glbinding_aux.macro.export = '__attribute__((visibility("default")))'
    glbinding_aux.macro.hidden = '__attribute__((visibility("hidden")))'
    glbinding_aux.macro.deprecated = '__attribute__((__deprecated__))'
  }

  case 'windows'
  {
    if ($cxx.id == 'msvc')
    {
      glbinding_aux.macro.import = '__declspec(dllimport)'
      glbinding_aux.macro.export = '__declspec(dllexport)'
      glbinding_aux.macro.hidden =
      glbinding_aux.macro.deprecated = '__declspec(deprecated)'
    }
    else
    {
      glbinding_aux.macro.import =
      glbinding_aux.macro.export =
      glbinding_aux.macro.hidden =
      glbinding_aux.macro.deprecated = '__attribute__((__deprecated__))'
    }
  }
}

hxx{glbinding-aux_export}: in{glbinding-aux_export}

hxx{glbinding-aux_api}: in{glbinding-aux_api}: include = ($cxx.id != 'msvc')
hxx{glbinding-aux_api}: in{glbinding-aux_msvc_api}: include = ($cxx.id == 'msvc')


# Configuration
include_dirs = "-I$src_base/include" "-I$out_root" "-I$src_root"
cxx.poptions =+ $include_dirs

import glbinding = glbinding%lib{glbinding}
lib{glbinding-aux}: $glbinding

lib{glbinding-aux}:
{
  cxx.export.poptions = $include_dirs
  cxx.export.libs = $glbinding
}

obja{*}: cxx.poptions += -DGLBINDING_AUX_STATIC_BUILD -DGLBINDING_AUX_STATIC_DEFINE
objs{*}: cxx.poptions += -DGLBINDING_AUX_SHARED_BUILD -DGLBINDING_AUX_EXPORTS

liba{glbinding-aux}: \
  cxx.export.poptions += -DGLBINDING_AUX_STATIC -DGLBINDING_AUX_STATIC_DEFINE
libs{glbinding-aux}: cxx.export.poptions += -DGLBINDING_AUX_SHARED

switch ($cxx.target.class)
{
  case 'linux'
  {
    cxx.poptions += -DSYSTEM_LINUX
    cxx.coptions += -fPIC # -fvisibility=hidden
    cxx.libs += -pthread -ldl
    lib{glbinding}: cxx.export.libs += -pthread -ldl
  }

  case 'macos'
  {
    cxx.poptions += -DSYSTEM_DARWIN
    cxx.coptions += -fPIC
    cxx.libs += -pthread -ldl
    lib{glbinding}: cxx.export.libs += -pthread -ldl
  }

  case 'windows'
  {
    cxx.poptions += -DSYSTEM_WINDOWS
    if ($cxx.id == 'msvc')
    {
      cxx.poptions += /D_SCL_SECURE_NO_WARNINGS /D_CRT_SECURE_NO_WARNINGS
      cxx.coptions += /MP /W4 /wd4251 /wd4592 /wd4127 /Zm200 \
                      /Gw /GS- /GL /GF
    }
  }
}

# Installation
hxx{*}: install = include/glbinding-aux/
include/{hxx ixx}{*}:
{
  install = include/
  install.subdirs = true
}
source/{hxx ixx}{*}: install = false
