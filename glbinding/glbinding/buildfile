./: lib{glbinding}

# Library Dependencies
#
intf_libs = $default.intf_libs
impl_libs = $default.impl_libs

if ($config.glbinding.use_packaged_khr)
{
  include ../external/
  intf_libs += ../external/lib{KHRplatform}
}

intf_libs = $cxx.deduplicate_export_libs($intf_libs)

# Source File Dependencies
#
lib{glbinding}: \
  hxx{glbinding-version glbinding_features glbinding_api} \
  include/glbinding/{hxx ixx}{**} \
  source/{hxx ixx}{**} source/cxx{** -Binding_pch}

lib{glbinding}: source/cxx{Binding_pch}: include = ($cxx.id == 'msvc')

# Code Generation
#
hxx{glbinding-version}: in{version} $src_root/manifest
{
  summary = $project.summary
  revision = ''
  dist = true
  clean = ($src_root != $out_root)
}

# Add libraries at the end. Order is important.
# Otherwise, linking might fail due to 'undefined reference' errors.
#
lib{glbinding}: $intf_libs $impl_libs

# Build Options
#
include_dirs = "-I$src_base/include" "-I$out_root" "-I$src_root"
cxx.poptions += $include_dirs
#
{hbmia obja}{*}: cxx.poptions += -DGLBINDING_STATIC_BUILD
{hbmis objs}{*}: cxx.poptions += -DGLBINDING_SHARED_BUILD

# Export Options
#
lib{glbinding}:
{
  cxx.export.poptions = $default.export.poptions $include_dirs
  cxx.export.libs = $default.export.libs $intf_libs
}
#
liba{glbinding}: cxx.export.poptions += -DGLBINDING_STATIC
libs{glbinding}: cxx.export.poptions += -DGLBINDING_SHARED

# Library Version
#
lib{glbinding}: bin.lib.version = "-$version.major.$version.minor"

# Installation of Header Files
#
hxx{*}: install = include/glbinding/
source/{hxx ixx}{*}: install = false
include/{hxx ixx}{*}:
{
  install = include/
  install.subdirs = true
}
