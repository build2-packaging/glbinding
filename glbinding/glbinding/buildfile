./: lib{glbinding}

# Sources
lib{glbinding}: \
  hxx{glbinding-version glbinding_export glbinding_features glbinding_api} \
  include/glbinding/{hxx ixx}{**} source/{hxx ixx cxx}{**}

hxx{glbinding_api}: in{glbinding_api}: include = ($cxx.id != 'msvc')
hxx{glbinding_api}: in{glbinding_msvc_api}: include = ($cxx.id == 'msvc')

hxx{glbinding-version}: in{version} $src_root/manifest
{
  summary = $project.summary
  dist = true
  clean = ($src_root != $out_root)
}

# Configuration
include_dirs = "-I$src_base/include" "-I$out_root" "-I$src_root"
cxx.poptions =+ $include_dirs

include ../external/
KHRplatform = ../external/lib{KHRplatform}
lib{glbinding}: $KHRplatform

lib{glbinding}:
{
  cxx.export.poptions = $include_dirs
  cxx.export.libs = $KHRplatform
}

obja{*}: cxx.poptions += -DGLBINDING_STATIC_BUILD -DGLBINDING_STATIC_DEFINE
objs{*}: cxx.poptions += -DGLBINDING_SHARED_BUILD -DGLBINDING_EXPORTS

liba{glbinding}: cxx.export.poptions += -DGLBINDING_STATIC -DGLBINDING_STATIC_DEFINE
libs{glbinding}: cxx.export.poptions += -DGLBINDING_SHARED

switch ($cxx.target.class)
{
  case 'linux'
    cxx.poptions += -DSYSTEM_LINUX
  case 'macos'
    cxx.poptions += -DSYSTEM_DARWIN
  case 'windows'
    cxx.poptions += -DSYSTEM_WINDOWS
}

if (($cxx.target.class == 'linux') || ($cxx.target.class == 'macos'))
{
  # cxx.coptions += -fvisibility=hidden
  cxx.libs += -pthread -ldl
  lib{glbinding}: cxx.export.libs += -pthread -ldl
}

if ($cxx.target.class == 'windows')
{
  if ($cxx.id == 'msvc')
  {
    cxx.poptions += /D_SCL_SECURE_NO_WARNINGS /D_CRT_SECURE_NO_WARNINGS
    cxx.coptions += /MP /W4 /wd4251 /wd4592 /wd4127 /Zm200 \
                    /Gw /GS- /GL /GF
  }
}

# Installation
hxx{*}: install = include/glbinding/
include/{hxx ixx}{*}:
{
  install = include/
  install.subdirs = true
}
source/{hxx ixx}{*}: install = false
